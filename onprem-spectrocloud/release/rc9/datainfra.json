{
  "metadata": {
    "name": "_ddp_prefix-native-ddp-datainfra",
    "description": "datainfra native charts for ddp",
    "labels": {
      "owner": "ddp"
    }
  },
  "spec": {
    "version": "1.0.0-rc9",
    "template": {
      "type": "add-on",
      "cloudType": "all",
      "packs": [
        {
          "name": "",
          "type": "oci",
          "layer": "addon",
          "version": "",
          "tag": "",
          "values": "pack:\n  namespace: \"{{.spectro.macro._ddp_prefix-datainfra_ns}}\"\n  spectrocloud.com/install-priority: \"0\"\nglobal:\n  nodeaffinity: false #For specific nodepool, set this to true\n  azure: false #For on-prem, set this to false\n  tolerations: \n    key: \"nodeclass\"\n    value: \"nodeclass_value\" #For specific nodepool, provide the taint value\n  nodepool: \n    key: \"agentpool\"\n    value: \"agentpool_value\" #For specific nodepool, provide the nodepool name\n  imageRegistry: \"lcsdigitaldev.azurecr.io/distributed-data-platform\"\n  keyVaultAuth: \"environment\"\n  env:\n    AZURE_TENANT_ID: \"{{.spectro.macro._ddp_prefix-AZURE_TENANT_ID}}\"\n    AZURE_CLIENT_ID: \"{{.spectro.macro._ddp_prefix-AZURE_CLIENT_ID}}\"\n    AZURE_CLIENT_SECRET: \"{{.spectro.macro._ddp_prefix-AZURE_CLIENT_SECRET}}\"\n  clusterId: \"{{.spectro.macro._ddp_prefix-clusterContext}}\"\ndatainfra-prometheus-operator:\n  prometheus:\n    prometheusSpec:\n      remoteWrite: \n        - url: \"{{.spectro.macro._ddp_prefix-prometheusRemoteWriteURL}}\"\ndatainfra-azure-monitor:\n  enabled: true\n  amalogs:             #Reqauired for on-prem\n    secret:\n      wsid: \"{{.spectro.macro._ddp_prefix-workspaceID}}\"   #workspace_id\n      key: \"{{.spectro.macro._ddp_prefix-workspaceKey}}\"   #workspace_key\n    env:\n      clusterName: \"{{.spectro.macro._ddp_prefix-clusterContext}}\"\ndatainfra-akvs:\n  azure:\n    vault:\n      name: \"{{.spectro.macro._ddp_prefix-keyvaultName}}\"   #Provide the keyvault name",
          "registry": {
            "metadata": {
              "uid": "",
              "name": "",
              "kind": "oci",
              "isPrivate": false
            }
          }
        },
        {
          "name": "",
          "type": "oci",
          "layer": "addon",
          "version": "",
          "tag": "",
          "values": "pack:\n  namespace: \"{{.spectro.macro._ddp_prefix-foundation_ns}}\"\n  spectrocloud.com/install-priority: \"1\"\nglobal:\n  nodeaffinity: false    #For specific nodepool, set this to true\n  tolerations: \n    key: \"nodeclass\"\n    value: \"nodeclass_value\" #For specific nodepool, provide the taint value\n  nodepool: \n    key: \"agentpool\"\n    value: \"agentpool_value\" #For specific nodepool, provide the nodepool name\n  imageRegistry: \"lcsdigitaldev.azurecr.io/distributed-data-platform\"\n  azure: false  #For on-prem, set this to false\n  clusterName: \"{{.spectro.macro._ddp_prefix-clusterContext}}\"\n  nodesize: 1 #For three node kafka, set this to 3\n\n\ndatareme-flink-k8s-operator:\n  watchNamespaces:\n    - domain-native-mural    #Update the namespace accordingly. This should be the namespace where kafka is getting installed\n    - domain-consumer-mural\n\ndatainfra-akvs-namespace:\n  azure:\n    vault:\n      name: \"{{.spectro.macro._ddp_prefix-keyvaultName}}\"      #Provide the keyvault name\n    kafka:\n      clusterName: \"{{.spectro.macro._ddp_prefix-kafkaCloudClusterName}}\" #Azure kafka cluster name. This is required for on-prem\n# datareme-shared-volume-for-flink:\n#   storageClassName: spectro-storage-class # For on-prem, set it to spectro-storage-class.",
          "registry": {
            "metadata": {
              "uid": "",
              "name": "",
              "kind": "oci",
              "isPrivate": false
            }
          }
        }
      ]
    }
  }
}
